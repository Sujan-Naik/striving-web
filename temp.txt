Here's how to integrate Matrix chat in Next.js:
1. Install Matrix SDK

npm install matrix-js-sdk

2. Create Matrix Client Hook

// hooks/useMatrix.js
import { createClient } from 'matrix-js-sdk';
import { useState, useEffect } from 'react';

export function useMatrix() {
  const [client, setClient] = useState(null);
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  const login = async (homeserverUrl, username, password) => {
    const matrixClient = createClient({ baseUrl: homeserverUrl });

    try {
      await matrixClient.login('m.login.password', {
        user: username,
        password: password,
      });

      setClient(matrixClient);
      setIsLoggedIn(true);
      await matrixClient.startClient();
    } catch (error) {
      console.error('Login failed:', error);
    }
  };

  return { client, isLoggedIn, login };
}

3. Chat Component

// components/Chat.js
import { useState, useEffect } from 'react';
import { useMatrix } from '../hooks/useMatrix';

export default function Chat({ roomId }) {
  const { client, isLoggedIn } = useMatrix();
  const [messages, setMessages] = useState([]);
  const [newMessage, setNewMessage] = useState('');

  useEffect(() => {
    if (!client || !isLoggedIn) return;

    const onMessage = (event) => {
      if (event.getType() === 'm.room.message') {
        setMessages(prev => [...prev, event]);
      }
    };

    client.on('Room.timeline', onMessage);
    return () => client.off('Room.timeline', onMessage);
  }, [client, isLoggedIn]);

  const sendMessage = async () => {
    if (!client || !newMessage.trim()) return;

    await client.sendTextMessage(roomId, newMessage);
    setNewMessage('');
  };

  return (
    <div>
      <div>
        {messages.map(msg => (
          <div key={msg.getId()}>
            <strong>{msg.getSender()}: </strong>
            {msg.getContent().body}
          </div>
        ))}
      </div>

      <input
        value={newMessage}
        onChange={(e) => setNewMessage(e.target.value)}
        onKeyPress={(e) => e.key === 'Enter' && sendMessage()}
      />
      <button onClick={sendMessage}>Send</button>
    </div>
  );
}

4. Usage in Page

// pages/companion.js
import { useMatrix } from '../hooks/useMatrix';
import Chat from '../components/Chat';

export default function Companion() {
  const { isLoggedIn, login } = useMatrix();

  if (!isLoggedIn) {
    return (
      <button onClick={() => login('https://matrix.org', 'username', 'password')}>
        Connect to Chat
      </button>
    );
  }

  return <Chat roomId="!your-room-id:matrix.org" />;
}

For production, you'll want to set up your own Synapse server and handle authentication more securely.